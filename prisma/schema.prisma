// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id            String   @id @default(uuid())
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  email         String   @unique
  username      String   @unique
  firstName     String
  lastName      String
  password      String
  avatar        String?
  favoriteBooks Book[]
  reviews       Review[]
  isAdmin       Boolean  @default(false)
}

model Author {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  firstName String
  lastName  String
  bio       String
  avatar    String?
  works     Book[]
}

model Book {
  id         String   @id @default(uuid())
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  title      String
  summary    String   @db.VarChar(512)
  imgUrl     String?
  rating     Float    @default(0.0)
  pageNumber Int
  authors    Author[]
  likedBy    User[]
  reviews    Review[]
}

model Review {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  vote      Int
  body      String
  book      Book     @relation(fields: [bookId], references: [id])
  bookId    String
  author    User     @relation(fields: [authorId], references: [id])
  authorId  String
}
